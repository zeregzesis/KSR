@startuml
title KSR_Class_diagram
class Partition{
    - String filepath
    - String content
    - int startIndex
    - int endIndex
    void setFilepath(String newPath)
    void getFileContents()
    Article getNextArticle()
}

class Article{
    - String contents
    - Places label
}

enum Places{
    westgermany
    usa
    france
    uk
    canada
    japan
}

class Dicts{
    - String[] c1_dict
    - String[] c2_dict
    - String[] c3_dict
    - String[] c4_dict
    - String[] c5_dict
    - String[] c6_dict
    - String[] c7_dict
    - String[] c8_dict
    - String[] c9_dict
    - String[] c10_dict
}

class Properties{
    - String c1
    - String c2
    - String c3
    - String c4
    - String c5
    - String c6
    - String c7
    - String c8
    - String c9
    - String c10
    - Places label
}


class FeatureExtractor{
    - Dicts dictionaries
    void extractProperties(Article article)
}

class KNN{
    - int k
    - TextSimilarityMeasure textSimilarityMeasure
    - ConfusionMatrix confusionMatrix
    - PropertiesList train
    - PropertiesList test
    void performKNN()
    Places evaluate(List<Places> places)

}

class App{
    void main(String[] args)
}

class PropertiesList{
    - List<Properties> dataset
    void dropFeature(int feature_number)
    - void shuffle()
    List<PropertiesList> createSets(float test_set_split)
}


abstract Metrics{
    - BiFunction<var, var, Double> metricFunction
    float calculate()
}

class ChebyshevMertic{

}

class EuclidianMertic{

}

class ManhattanMertic{

}

abstract class TextSimilarityMeasure{
    - double sim(String s1, String s2);
}

class TFM{

}

class ConfusionMatrix{
    - int[][] confmat
    int[][] getConfmat()
    void incrementConfmat(Places predicted, Places accual)
    double calculateAccuracy()
    int getTP(Places place)
    int getFN(Places place)
    getFP(Places place)
    int getTN(Places place)
    double calculatePrecisionForCountry(Places place)
    double calculateRecallForCountry(Places place)
    double calculateF1ScoreForCountry(Places place)
    int numberOfAllArticlesClassified()
    double calculatePrecisionForClassification()
    double calculateRecallForClassification()
    double calculateF1scoreForClassification()
    public List<Double> generateResults()
    - void print()
}

class CSVappender{
    - File f
    - FileWriter csvfile
    void append(ConfusionMatrix confmat,int k, String metric, String similarityMeasure, double trainSetSize)
    void finalize()
    void appendHeadline()
}

TextSimilarityMeasure <|-- TFM
Metrics <|-- ManhattanMertic
Metrics <|-- ChebyshevMertic
Metrics <|-- EuclidianMertic

App --> Partition
App --> KNN
App --> FeatureExtractor
App --> ConfusionMatrix
App --> CSVappender
KNN ..> ConfusionMatrix : uses
PropertiesList o-- Properties
Properties --> Places
FeatureExtractor --> Dicts
FeatureExtractor ..> PropertiesList : creates
Partition ..> Article : creates
FeatureExtractor ..> Article : uses
KNN ..> Metrics : uses
KNN ..> TextSimilarityMeasure : uses
KNN ..> PropertiesList : uses