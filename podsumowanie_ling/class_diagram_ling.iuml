@startuml
title KSR_Ling_Class_diagram_ling



class Summary{
    - Quantifier quantifier
    - List<Subjects> subjects
    - Agregator qualifier
    - Agregator summarizer
    - SummaryType summaryType

    - double T1(List<FoodItem>)
    - double T2(List<FoodItem>)
    - double T3(List<FoodItem>)
    - double T4(List<FoodItem>)
    - double T5(List<FoodItem>)
    double optimalSummaryMetric(List<FoodItem>, List<Double>)
    - double T6(List<FoodItem>)
    - double T7(List<FoodItem>)
    - double T8(List<FoodItem>)
    - double T9(List<FoodItem>)
    - double T10(List<FoodItem>)
    - double T11(List<FoodItem>)
    double ExtendedOptimalSummaryMetric(List<FoodItem>, List<Double>)
    List<double> getStandardMeasures(List<FoodItem>)
    String generateLinguisticSummary(List<FoodItem>)

}

class Quantifier{
    - String name
    - MemberFunc memberFunc
    - boolean isAbsolute
    - boolean isForthForm

    double getValue(double)
}

class Agregator{
    - List<FuzzySet> setList
    - List<Boolean> andList

    void addSet(FuzzySet, boolean)
    double tNorm(double, double)
    static double implication(double, double)
    double DoM(FoodItem, boolean)
    double cardinality(List<FoodItem>)
}

class Subject{
    - String toFind
    - String name

    boolean isPartOf(FoodItem)
    List<FoodItem> filter(List<FoodItem>)
}

class SummaryBuilder{
    static Summary buildSummary(Quantifier, List<Subject>, Agregator, Agregator, SummaryType)
}

enum SummaryType {
    SINGLE_SUBJECT(0),
    FIRST_FORM(1),
    SECOND_FORM(2),
    THIRD_FORM(3),
    FOURTH_FORM(4)
    int value;

    SummaryType(int value)
}

Summary o-u- SummaryType
Summary o-l- Quantifier
Summary o-- Subject
Summary o-r- Agregator
Summary .d.> SummaryBuilder